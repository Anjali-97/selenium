{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Courier New;}{\f2\fnil\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue192;\red232\green242\blue254;\red0\green0\blue0;\red106\green62\blue62;\red212\green212\blue212;\red42\green0\blue255;}
{\*\generator Riched20 10.0.14393}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs22\lang9 Selenium day 3 :\par
\par
1. What is the difference between driver.close() and driver.quit command?\par
\b0 driver.close() command closes the browser window which is currently active and driver.quit() command closes all the browser windows and terminate a WebDriver session.\par
The driver.close() and driver.quit() commands work in the way when the automation process opens only a single browser window. Both will differ in their functionality when there is more than one browser window opened during Automation.\par
\par
\b 2. What are the different types of waits available in WebDriver?\par
\b0 3 waits are available in WebDriver.They are :\par
* implicit wait            * explicit wait             *fluent wait\par
2.1  implicit wait \par
    It will wait for all findElement() and findElements(). Webdriver tries to find element in DOM after every polling time, if element is not found then it wait for polling time(0.5 Seconds) and again try to find the element until maximum time defined is over. If element is not found then it will throw NoSuchElementException.\par
Eg: \cf1\highlight2\f1\fs20 browser\cf3 .manage().timeouts().implicitlyWait(10,TimeUnit.\cf1\b\i SECONDS\cf3\b0\i0 );\cf0\highlight0\f0\fs22\par
2.2 Explicit Wait\par
  It is defined to  a particular web element. It will wait for single web element. For example if one of the web element takes more time than implicit wait then instead of changing implicit wait time it is better to define explicit wait.\par
Eg: \cf1\highlight2\f1\fs20 browser\cf3 .manage().timeouts().\f2\lang16393 ex\f1\lang9 plicitlyWait(10,TimeUnit.\cf1\b\i SECONDS\cf3\b0\i0 );\cf0\highlight0\f0\fs22\par
2.3 Fluent wait\par
   Itis similar to explicit wait the difference is in fluent wait we can define polling time. And we can ignore the exception.\par
\par
\b 3. How to type in a textbox using Selenium?\par
\b0 Eg :    \cf3\f1\fs20 WebElement \cf4 textbox\cf3  = \cf1 browser\cf3 .\highlight5 findElement\highlight0 (By.\i xpath\i0 (\cf6 "//*[@id=\\"tsf\\"]/div[2]/div[1]/div[1]/div/div[2]/input"\cf3 ));\cf0\par
\cf4 textbox\cf3 .sendKeys(\cf6 "\f2\lang16393 twitter\f1\lang9 "\cf3 );\cf0\par
\cf4 textbox\cf3 .sendKeys(Keys.\cf1\b\i ENTER\cf3\b0\i0 );\cf0\f0\fs22\par
\par
\b 4. How can you find if an element in displayed on the screen?\par
\b0 There are different methods to check the visibility of an element on the screen. They are:\par
isDisplayed()   :   It is the method used to verify a presence of a web element within the webpage\par
\par
isSelected()    :    It is the method used to verify if the web element is selected or not.\par
\par
isEnabled()   :   It is the method used to verify if the web element is enabled or disabled within the webpage\par
\par
\b 5. How can we get a text of a web element?\par
\cf3\highlight2\b0\f1\fs20 WebElement \cf4 textbox\cf3  = \cf1 browser\cf3 .findElement(By.\i xpath\i0 (\cf6 "//a[@href=\\"/login\\"]"\cf3 ));\par
driver.findElement(By.cssSelector("div.success")\f2\lang16393 ;\f1\lang9\par
WebElement element = driver.findElement(By.className("div.success")\par
element.getText();\cf0\highlight0\f0\fs22\par
\par
\b 6. How to select value in a dropdown?\par
\b0 Select dropdown = new Select(driver.findElement(By.id("identifier")));\par
eg :  Select dropdown = new Select(driver.findElement(By.id("Marks")));\par
\par
\b 7. What are the different types of navigation commands?\par
\b0 Navigation commands allows the browser to move backwards or forwards in the browser's history.The different types of Navigation commands are :\par
  7.1  : Navigate to command : This method loads a new web page in the existing browser window.\par
  Eg : driver.navigate().to("www.amazon.com");\par
  7.2  :  Forward command  :  This method enables the web browser to click on the forward button in the existing browser window. It neither accepts anything nor returns anything.\par
   Eg :  driver.navigate().forward();\par
   7.3 :   Back command  :  This method enables the web browser to click on the back button in the existing browser window. It neither accepts anything nor returns anything.\par
   Eg  :  driver.navigate().back();  \par
  7.4 :  Refresh command  :  This method refresh/reloads the current web page in the existing browser window. It neither accepts anything nor returns anything.\par
   Eg  :  driver.navigate().refresh();  \par
\par
\b 8. How to click on a hyper link using linkText?\par
\cf3\b0\f2\fs20\lang16393 Using linktext : \par
\f1\lang9 WebElement \cf4 textbox5\cf3 =\cf1 browser\cf3 .findElement(By.\i linkText\i0 (\cf6 "See more"\cf3 ));\cf0\par
\cf4 textbox5\cf3 .click();\par
\f2\lang16393 Using partialLinkText :\cf0\f1\lang9\par
\cf3 WebElement \cf4 textbox6\cf3 =\cf1 browser\cf3 .findElement(By.\i partialLinkText\i0 (\cf6 "max"\cf3 ));\cf0\par
\cf4 textbox6\cf3 .click()\cf0\f0\fs22\par
\b 9. How to handle frame in WebDriver?\par
\b0     IFrame is a web page which is embedded in another web page or an HTML document embedded inside another HTML document.\par
   The IFrame is often used to insert content from another source, such as an advertisement, into a Web page. The <iframe> tag specifies an inline frame.\par
   we can switch over the elements in frames using 3 ways.\par
\par
 *  By Index   :  Index is one of the attributes for the Iframe through which we can switch to it.Index of the iframe starts with '0'.\par
     driver.switchTo().frame(0);\par
     driver.switchTo().frame(1);\par
  * By Name or Id   :  Name and ID are attributes of iframe through which we can switch to the it.\par
       driver.switchTo().frame("iframe1");\par
       driver.switchTo().frame("id of the element");\par
  * By Web Element  :  We can even switch to the iframe using web element .\par
       driver.switchTo().frame(WebElement);\par
\par
\b 10. When do we use findElement() and findElements()?\par
\b0    These commands are used for identifying the elements.\par
    findElement  :  This command is used to uniquely identify a web element within the web page. \par
                       It will return the object of the first matching element of the specified locator\par
                       It will throw NoSuchElementException when it fails to identify the element\par
    findElements  :     This command is used to uniquely identify the list of web elements within the web page\par
                       The usage of this method is very limited\par
                       If the element doesn\rquote t exist on the page then, then it will return value with an empty list\par
\par
\par
\b Selenium day 2 [cont..]\par
\par
\b0 Syntaxes for CSS selector   :\par
\par
1.1  :  Tag and ID  :  \par
         Syntax :  css=(Html tag )(#) (value of the ID attribute)\par
         Eg :  "input# twotabsearchtextbox"\par
1.2  : Tag and Class   :\par
            Syntax  :  css=(HTML tag)(.)(Value of Class attribute)\par
            Eg :  "signInSubmit. a-button-input"\par
1.3  : Tag and Attribute  :\par
            Syntax  :  css=(HTML Page)[Attribute=Value] \par
            Eg  :  "input[name= 'feild-keywords']"\par
1.4  : Tag class and Attribute  :\par
            Syntax  :  css=(HTML tag>)(. )(Class attribute value)([attribute=Value of attribute])\par
             Eg : "input.nav-input[type = submit]"\par
1.5  :   Locating elements via matches   :\par
      1.5.1  : Starts with  :\par
                Syntax  :   css=(HTML tag)([attribute^=start of the string])\par
                Eg :  driver.findElement(By.cssSelector("input[name^='em']"));\par
       1.5.2   : Ends with  :\par
                  Syntax  :  css=(HTML tag)([attribute$=end of the string])\par
                Eg  :  driver.findElement(By.cssSelector("input[name$=\rquote ail\rquote ]"));\par
      1.5.3   :  Contains  :\par
                 Syntax  :  css=(HTML tag)([attribute*=partial string])\par
                 Eg :  driver.findElement(By.cssSelector("input[class*=\rquote control\rquote ]"));\par
}
 